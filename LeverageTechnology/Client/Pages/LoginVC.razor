@page "/"
@using LeverageTechnology.Shared;
@layout LoginLayout

@inject ILoginService LoginService
@inject NavigationManager NavManager
@inject ApiService ApiService


<div class="container">
    <div class="row justify-content-center mt-5">
        <div class="col-md-4">
            <div class="card">
                <div class="card-header text-center">
                    Login
                </div>
                <div class="card-body">
                    <EditForm Model="@loginModel" OnValidSubmit="OnLoginSubmit">
                        <DataAnnotationsValidator />

                        <div class="form-group mb-4">
                            <label for="username">Username:</label>
                            <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
                            <ValidationMessage For="@(() => loginModel.Username)" />
                        </div>

                        <div class="form-group">
                            <label for="password">Password:</label>
                            <InputText id="password" class="form-control" @bind-Value="loginModel.Password" type="password" />
                            <ValidationMessage For="@(() => loginModel.Password)" />
                        </div>

                        <div class="form-group text-center mt-4">
                            <button type="submit" class="btn btn-primary">Login</button>
                        </div>

                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger mt-3">@errorMessage</div>
                        }

                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    private LoginVm loginModel = new LoginVm();
    private string errorMessage = string.Empty;

    private async Task OnLoginSubmit()
    {
        var dto = new LoginDto { Username = loginModel.Username, Password = loginModel.Password };

        var response = await ApiService.LoginUser(dto);
        if (response.Succeeded)
        {
            await LoginService.Login(response);
            await ApiService.GetCaseStudy();
            await ApiService.GetExpTables();
            await ApiService.GetrIntro();
            NavManager.NavigateTo("/dashboard");
        }
        else
        {
            errorMessage = "Invalid username or password";
        }
    }
}
