@using Microsoft.AspNetCore.Components.Authorization
@inject ApiService ApiService
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudNavMenu Color="Color.Dark" Dense="false" Bordered="true">
    <MudNavLink Href="/dashboard" Icon="@Icons.Material.Filled.Dashboard" IconColor="Color.Primary">Dashboard</MudNavLink>

    @if (ApiService != null)
    {
        @if (ApiService.Intros != null)
        {
            var caseStudies = ApiService.Intros.Select(x => x.Title).Distinct().ToList();
            @foreach (var CaseStudy in caseStudies)
            {
                var link = "/Landing/" + CaseStudy;
                <MudNavLink Icon="@Icons.Material.Filled.Segment" IconColor="Color.Primary" Href="@link">@CaseStudy</MudNavLink>
            }

        }
        @if (IsAdmin)
        {
            <MudNavGroup Icon="@Icons.Material.Filled.Settings" Title="Configurations" Expanded="true">
                <MudNavLink Icon="@Icons.Material.Filled.AdminPanelSettings" Href="/UA">User Management</MudNavLink>
                <MudNavLink Icon="@Icons.Material.Filled.Cases" Href="/CS">CaseStudies</MudNavLink>
                <MudNavLink Icon="@Icons.Material.Filled.TableChart" Href="/ET">ExpTables</MudNavLink>
                <MudNavLink Icon="@Icons.Material.Filled.ViewHeadline" Href="/IN">Intros</MudNavLink>
            </MudNavGroup>
        }
    }
    else
    {
        NavManager.NavigateTo("/");
    }



</MudNavMenu>



@code {
    public bool IsAdmin;
    protected override async Task OnInitializedAsync()
    {
        await ApiService.SyncData();
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        IsAdmin = authState.User.IsInRole("ADMIN");
    }

}