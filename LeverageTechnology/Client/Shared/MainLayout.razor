@using Microsoft.AspNetCore.Components.Authorization;
@using MudBlazor.ThemeManager;
@inherits LayoutComponentBase

@inject ILoginService LoginService
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthenticationStateProvider
<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="MyCustomTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

@*@if (IsAuthenticated)
{
*@
<MudLayout>
    <MudAppBar Elevation="1" Color="Color.Primary">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Leverage Technology</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
        <MudFab Icon="@Icons.Material.Filled.Logout" OnClick="LogOut"></MudFab> 
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu></NavMenu>
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>
@*} *@

@code {
    bool _drawerOpen = true;

    private ThemeManagerTheme _themeManager = new ThemeManagerTheme();
    MudTheme MyCustomTheme = new MudTheme()
        {
            Palette = new PaletteLight()
            {
                Primary = Colors.Blue.Default,
                Secondary = Colors.BlueGrey.Darken4,
            },
            PaletteDark = new PaletteDark()
            {
                Primary = Colors.Blue.Lighten1
            }
        };
    public bool _themeManagerOpen = false;
    private bool _isDarkMode;
    private bool IsAuthenticated;

    public async Task LogOut()
    {
        await LoginService.Logout();
        NavManager.NavigateTo("/");
    }

    protected async override void OnInitialized()
    {
        //var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        //var user = authState.User;
        //if (user.Identity.IsAuthenticated)
        //{
        //    IsAuthenticated = true;
        //}
        //else
        //{
        //    IsAuthenticated = false;
        //    NavManager.NavigateTo("/");
        //}
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}
