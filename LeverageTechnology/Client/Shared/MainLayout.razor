@using Microsoft.AspNetCore.Components.Authorization;
@using MudBlazor.ThemeManager;
@inherits LayoutComponentBase

@inject ILoginService LoginService
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthenticationStateProvider
<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_themeManager.Theme" />
<MudDialogProvider />
<MudSnackbarProvider />

@*@if (IsAuthenticated)
{
*@
    <MudLayout>
        <MudAppBar Elevation="1">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <MudText Typo="Typo.h5" Class="ml-3">Leverage Technology</MudText>
            <MudSpacer />
            <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
            <MudMenu Icon="@Icons.Material.Filled.Build" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
                <MudSwitch @bind-Checked="@_isDarkMode" Color="Color.Primary" Class="ma-4" T="bool" Label="Dark Mode" />
                <MudMenuItem OnClick="LogOut">Logout</MudMenuItem>
                <MudMenuItem>
                </MudMenuItem>
            </MudMenu>
        </MudAppBar>
        <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
            <NavMenu></NavMenu>
        </MudDrawer>
        <MudMainContent>
            @Body
        </MudMainContent>
    </MudLayout>
@*} *@

@code {
    bool _drawerOpen = true;

    private ThemeManagerTheme _themeManager = new ThemeManagerTheme();
    public bool _themeManagerOpen = false;
    private bool _isDarkMode;
    private bool IsAuthenticated;

    public async Task LogOut()
    {
        await LoginService.Logout();
        NavManager.NavigateTo("/");
    }

    protected async override void OnInitialized()
    {
        //var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        //var user = authState.User;
        //if (user.Identity.IsAuthenticated)
        //{
        //    IsAuthenticated = true;
        //}
        //else
        //{
        //    IsAuthenticated = false;
        //    NavManager.NavigateTo("/"); 
        //}
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}
